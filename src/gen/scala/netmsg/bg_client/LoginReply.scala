// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.bg_client


import com.trueaccord.scalapb.Descriptors

final case class LoginReply(
    error: Option[String] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[LoginReply] with com.trueaccord.lenses.Updatable[LoginReply] {
    lazy val serializedSize: Int = {
      var __size = 0
      if (error.isDefined) { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, error.get) }
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      error.foreach { v => 
        output.writeString(1, v)
      }
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): netmsg.bg_client.LoginReply = {
      var __error = this.error
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __error = Some(__input.readString())
          case tag => __input.skipField(tag)
        }
      }
      netmsg.bg_client.LoginReply(
          error = __error
      )
    }
    def getError: String = error.getOrElse("")
    def clearError: LoginReply = copy(error = None)
    def withError(__v: String): LoginReply = copy(error = Some(__v))
    def getField(__field: Descriptors.FieldDescriptor): Any = {
      __field.number match {
        case 1 => error
      }
    }
    def companion = netmsg.bg_client.LoginReply
}

object LoginReply extends com.trueaccord.scalapb.GeneratedMessageCompanion[LoginReply]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[LoginReply]  = this
  def fromFieldsMap(fieldsMap: Map[Int, Any]): netmsg.bg_client.LoginReply = netmsg.bg_client.LoginReply(
    error = fieldsMap.getOrElse(1, None).asInstanceOf[Option[String]]
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("LoginReply", this,
    None, m = Seq(),
    e = Seq(),
    f = netmsg.bg_client.InternalFields_bg_client.internalFieldsFor("netmsg.bg_client.LoginReply"))
  lazy val defaultInstance = netmsg.bg_client.LoginReply(
  )
  implicit class LoginReplyLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, LoginReply]) extends com.trueaccord.lenses.ObjectLens[UpperPB, LoginReply](_l) {
    def error: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getError)((c_, f_) => c_.copy(error = Some(f_)))
    def optionalError: com.trueaccord.lenses.Lens[UpperPB, Option[String]] = field(_.error)((c_, f_) => c_.copy(error = f_))
  }
  final val ERROR_FIELD_NUMBER = 1
}
