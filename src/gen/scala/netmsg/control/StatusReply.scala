// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.control


import com.trueaccord.scalapb.Descriptors

final case class StatusReply(
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[StatusReply] with com.trueaccord.lenses.Updatable[StatusReply] {
    lazy val serializedSize: Int = {
      var __size = 0
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): netmsg.control.StatusReply = {
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case tag => __input.skipField(tag)
        }
      }
      netmsg.control.StatusReply(
      )
    }
    def getField(__field: Descriptors.FieldDescriptor): Any = throw new MatchError(__field)
    def companion = netmsg.control.StatusReply
}

object StatusReply extends com.trueaccord.scalapb.GeneratedMessageCompanion[StatusReply]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[StatusReply]  = this
  def fromFieldsMap(fieldsMap: Map[Int, Any]): netmsg.control.StatusReply = netmsg.control.StatusReply(
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("StatusReply", this,
    None, m = Seq(),
    e = Seq(),
    f = netmsg.control.InternalFields_control.internalFieldsFor("netmsg.control.StatusReply"))
  lazy val defaultInstance = netmsg.control.StatusReply(
  )
  implicit class StatusReplyLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, StatusReply]) extends com.trueaccord.lenses.ObjectLens[UpperPB, StatusReply](_l) {
  }
}
