// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.game


import com.trueaccord.scalapb.Descriptors

sealed trait WarpableKind extends com.trueaccord.scalapb.GeneratedEnum {
  def isBExtractor: Boolean = false
  def isBWarpLinker: Boolean = false
  def isBLaserTower: Boolean = false
  def isUCorvette: Boolean = false
  def isUWasp: Boolean = false
  def isUScout: Boolean = false
  def isURocketFrigate: Boolean = false
  def isURayship: Boolean = false
  def isUGunship: Boolean = false
  def isUFortress: Boolean = false
}

object WarpableKind extends com.trueaccord.scalapb.GeneratedEnumCompanion[WarpableKind] {
  case object B_EXTRACTOR extends WarpableKind {
    val id = 1
    val name = "B_EXTRACTOR"
    override def isBExtractor: Boolean = true
  }
  
  case object B_WARP_LINKER extends WarpableKind {
    val id = 2
    val name = "B_WARP_LINKER"
    override def isBWarpLinker: Boolean = true
  }
  
  case object B_LASER_TOWER extends WarpableKind {
    val id = 3
    val name = "B_LASER_TOWER"
    override def isBLaserTower: Boolean = true
  }
  
  case object U_CORVETTE extends WarpableKind {
    val id = 4
    val name = "U_CORVETTE"
    override def isUCorvette: Boolean = true
  }
  
  case object U_WASP extends WarpableKind {
    val id = 5
    val name = "U_WASP"
    override def isUWasp: Boolean = true
  }
  
  case object U_SCOUT extends WarpableKind {
    val id = 6
    val name = "U_SCOUT"
    override def isUScout: Boolean = true
  }
  
  case object U_ROCKET_FRIGATE extends WarpableKind {
    val id = 7
    val name = "U_ROCKET_FRIGATE"
    override def isURocketFrigate: Boolean = true
  }
  
  case object U_RAYSHIP extends WarpableKind {
    val id = 8
    val name = "U_RAYSHIP"
    override def isURayship: Boolean = true
  }
  
  case object U_GUNSHIP extends WarpableKind {
    val id = 9
    val name = "U_GUNSHIP"
    override def isUGunship: Boolean = true
  }
  
  case object U_FORTRESS extends WarpableKind {
    val id = 10
    val name = "U_FORTRESS"
    override def isUFortress: Boolean = true
  }
  
  lazy val values = Seq(B_EXTRACTOR, B_WARP_LINKER, B_LASER_TOWER, U_CORVETTE, U_WASP, U_SCOUT, U_ROCKET_FRIGATE, U_RAYSHIP, U_GUNSHIP, U_FORTRESS)
  def fromValue(value: Int): WarpableKind = value match {
    case 1 => B_EXTRACTOR
    case 2 => B_WARP_LINKER
    case 3 => B_LASER_TOWER
    case 4 => U_CORVETTE
    case 5 => U_WASP
    case 6 => U_SCOUT
    case 7 => U_ROCKET_FRIGATE
    case 8 => U_RAYSHIP
    case 9 => U_GUNSHIP
    case 10 => U_FORTRESS
  }
  lazy val descriptor = new Descriptors.EnumDescriptor(0, "WarpableKind", this)
}