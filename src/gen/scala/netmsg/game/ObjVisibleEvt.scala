// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.game


import com.trueaccord.scalapb.Descriptors

final case class ObjVisibleEvt(
    `object`: netmsg.game.WObject
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ObjVisibleEvt] with com.trueaccord.lenses.Updatable[ObjVisibleEvt] {
    lazy val serializedSize: Int = {
      var __size = 0
      __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(`object`.serializedSize) + `object`.serializedSize
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      output.writeTag(1, 2)
      output.writeRawVarint32(`object`.serializedSize)
      `object`.writeTo(output)
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): netmsg.game.ObjVisibleEvt = {
      var __object = this.`object`
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __object = com.trueaccord.scalapb.LiteParser.readMessage(__input, __object)
          case tag => __input.skipField(tag)
        }
      }
      netmsg.game.ObjVisibleEvt(
          `object` = __object
      )
    }
    def withObject(__v: netmsg.game.WObject): ObjVisibleEvt = copy(`object` = __v)
    def getField(__field: Descriptors.FieldDescriptor): Any = {
      __field.number match {
        case 1 => `object`
      }
    }
    def companion = netmsg.game.ObjVisibleEvt
}

object ObjVisibleEvt extends com.trueaccord.scalapb.GeneratedMessageCompanion[ObjVisibleEvt]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[ObjVisibleEvt]  = this
  def fromFieldsMap(fieldsMap: Map[Int, Any]): netmsg.game.ObjVisibleEvt = netmsg.game.ObjVisibleEvt(
    `object` = fieldsMap(1).asInstanceOf[netmsg.game.WObject]
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("ObjVisibleEvt", this,
    None, m = Seq(),
    e = Seq(),
    f = netmsg.game.InternalFields_game.internalFieldsFor("netmsg.game.ObjVisibleEvt"))
  lazy val defaultInstance = netmsg.game.ObjVisibleEvt(
    `object` = netmsg.game.WObject.defaultInstance
  )
  implicit class ObjVisibleEvtLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, ObjVisibleEvt]) extends com.trueaccord.lenses.ObjectLens[UpperPB, ObjVisibleEvt](_l) {
    def `object`: com.trueaccord.lenses.Lens[UpperPB, netmsg.game.WObject] = field(_.`object`)((c_, f_) => c_.copy(`object` = f_))
  }
  final val OBJECT_FIELD_NUMBER = 1
}
