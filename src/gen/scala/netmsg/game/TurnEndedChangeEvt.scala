// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.game


import com.trueaccord.scalapb.Descriptors

final case class TurnEndedChangeEvt(
    playerId: netmsg.game.PlayerID,
    newTurnEnded: Boolean
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[TurnEndedChangeEvt] with com.trueaccord.lenses.Updatable[TurnEndedChangeEvt] {
    lazy val serializedSize: Int = {
      var __size = 0
      __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(playerId.serializedSize) + playerId.serializedSize
      __size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, newTurnEnded)
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      output.writeTag(1, 2)
      output.writeRawVarint32(playerId.serializedSize)
      playerId.writeTo(output)
      output.writeBool(2, newTurnEnded)
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): netmsg.game.TurnEndedChangeEvt = {
      var __playerId = this.playerId
      var __newTurnEnded = this.newTurnEnded
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __playerId = com.trueaccord.scalapb.LiteParser.readMessage(__input, __playerId)
          case 16 =>
            __newTurnEnded = __input.readBool()
          case tag => __input.skipField(tag)
        }
      }
      netmsg.game.TurnEndedChangeEvt(
          playerId = __playerId,
          newTurnEnded = __newTurnEnded
      )
    }
    def withPlayerId(__v: netmsg.game.PlayerID): TurnEndedChangeEvt = copy(playerId = __v)
    def withNewTurnEnded(__v: Boolean): TurnEndedChangeEvt = copy(newTurnEnded = __v)
    def getField(__field: Descriptors.FieldDescriptor): Any = {
      __field.number match {
        case 1 => playerId
        case 2 => newTurnEnded
      }
    }
    def companion = netmsg.game.TurnEndedChangeEvt
}

object TurnEndedChangeEvt extends com.trueaccord.scalapb.GeneratedMessageCompanion[TurnEndedChangeEvt]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[TurnEndedChangeEvt]  = this
  def fromFieldsMap(fieldsMap: Map[Int, Any]): netmsg.game.TurnEndedChangeEvt = netmsg.game.TurnEndedChangeEvt(
    playerId = fieldsMap(1).asInstanceOf[netmsg.game.PlayerID],
    newTurnEnded = fieldsMap(2).asInstanceOf[Boolean]
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("TurnEndedChangeEvt", this,
    None, m = Seq(),
    e = Seq(),
    f = netmsg.game.InternalFields_game.internalFieldsFor("netmsg.game.TurnEndedChangeEvt"))
  lazy val defaultInstance = netmsg.game.TurnEndedChangeEvt(
    playerId = netmsg.game.PlayerID.defaultInstance,
    newTurnEnded = false
  )
  implicit class TurnEndedChangeEvtLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, TurnEndedChangeEvt]) extends com.trueaccord.lenses.ObjectLens[UpperPB, TurnEndedChangeEvt](_l) {
    def playerId: com.trueaccord.lenses.Lens[UpperPB, netmsg.game.PlayerID] = field(_.playerId)((c_, f_) => c_.copy(playerId = f_))
    def newTurnEnded: com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.newTurnEnded)((c_, f_) => c_.copy(newTurnEnded = f_))
  }
  final val PLAYER_ID_FIELD_NUMBER = 1
  final val NEW_TURN_ENDED_FIELD_NUMBER = 2
}
