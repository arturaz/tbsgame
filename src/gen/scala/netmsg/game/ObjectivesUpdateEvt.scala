// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.game


import com.trueaccord.scalapb.Descriptors

final case class ObjectivesUpdateEvt(
    newObjectives: netmsg.game.Objectives
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ObjectivesUpdateEvt] with com.trueaccord.lenses.Updatable[ObjectivesUpdateEvt] {
    lazy val serializedSize: Int = {
      var __size = 0
      __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(newObjectives.serializedSize) + newObjectives.serializedSize
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      output.writeTag(1, 2)
      output.writeRawVarint32(newObjectives.serializedSize)
      newObjectives.writeTo(output)
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): netmsg.game.ObjectivesUpdateEvt = {
      var __newObjectives = this.newObjectives
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __newObjectives = com.trueaccord.scalapb.LiteParser.readMessage(__input, __newObjectives)
          case tag => __input.skipField(tag)
        }
      }
      netmsg.game.ObjectivesUpdateEvt(
          newObjectives = __newObjectives
      )
    }
    def withNewObjectives(__v: netmsg.game.Objectives): ObjectivesUpdateEvt = copy(newObjectives = __v)
    def getField(__field: Descriptors.FieldDescriptor): Any = {
      __field.number match {
        case 1 => newObjectives
      }
    }
    def companion = netmsg.game.ObjectivesUpdateEvt
}

object ObjectivesUpdateEvt extends com.trueaccord.scalapb.GeneratedMessageCompanion[ObjectivesUpdateEvt]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[ObjectivesUpdateEvt]  = this
  def fromFieldsMap(fieldsMap: Map[Int, Any]): netmsg.game.ObjectivesUpdateEvt = netmsg.game.ObjectivesUpdateEvt(
    newObjectives = fieldsMap(1).asInstanceOf[netmsg.game.Objectives]
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("ObjectivesUpdateEvt", this,
    None, m = Seq(),
    e = Seq(),
    f = netmsg.game.InternalFields_game.internalFieldsFor("netmsg.game.ObjectivesUpdateEvt"))
  lazy val defaultInstance = netmsg.game.ObjectivesUpdateEvt(
    newObjectives = netmsg.game.Objectives.defaultInstance
  )
  implicit class ObjectivesUpdateEvtLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, ObjectivesUpdateEvt]) extends com.trueaccord.lenses.ObjectLens[UpperPB, ObjectivesUpdateEvt](_l) {
    def newObjectives: com.trueaccord.lenses.Lens[UpperPB, netmsg.game.Objectives] = field(_.newObjectives)((c_, f_) => c_.copy(newObjectives = f_))
  }
  final val NEW_OBJECTIVES_FIELD_NUMBER = 1
}
