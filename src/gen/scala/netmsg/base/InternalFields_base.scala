// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.base


import com.trueaccord.scalapb.Descriptors

object InternalFields_base {
  def internalFieldsFor(scalaName: String): Seq[Descriptors.FieldDescriptor] = scalaName match {
    case "netmsg.base.Vect2" => Seq(Descriptors.FieldDescriptor(0, 1, "x", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.INT, com.google.protobuf.Descriptors.FieldDescriptor.Type.SINT32), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "y", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.INT, com.google.protobuf.Descriptors.FieldDescriptor.Type.SINT32), isPacked = false, containingOneofName = None))
    case "netmsg.base.Bounds" => Seq(Descriptors.FieldDescriptor(0, 1, "start", Descriptors.Required, Descriptors.MessageType(netmsg.base.Vect2.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "end", Descriptors.Required, Descriptors.MessageType(netmsg.base.Vect2.descriptor), isPacked = false, containingOneofName = None))
    case "netmsg.base.UUID" => Seq(Descriptors.FieldDescriptor(0, 1, "mostSignificant", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "leastSignificant", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None))
    case "netmsg.base.ValWithMax" => Seq(Descriptors.FieldDescriptor(0, 1, "current", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.INT, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT32), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "maximum", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.INT, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT32), isPacked = false, containingOneofName = None))
    case "netmsg.base.Range" => Seq(Descriptors.FieldDescriptor(0, 1, "start", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.INT, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT32), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "end", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.INT, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT32), isPacked = false, containingOneofName = None))
    case "netmsg.base.Timestamp" => Seq(Descriptors.FieldDescriptor(0, 1, "timestamp", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT64), isPacked = false, containingOneofName = None))
    case "netmsg.base.Timeframe" => Seq(Descriptors.FieldDescriptor(0, 1, "start", Descriptors.Required, Descriptors.MessageType(netmsg.base.Timestamp.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "end", Descriptors.Required, Descriptors.MessageType(netmsg.base.Timestamp.descriptor), isPacked = false, containingOneofName = None))
    case "netmsg.base.Rational" => Seq(Descriptors.FieldDescriptor(0, 1, "numerator", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.INT64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "denominator", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.INT64), isPacked = false, containingOneofName = None))
  }
}