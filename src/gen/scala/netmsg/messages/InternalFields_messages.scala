// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.messages

import scala.collection.JavaConversions._
import com.trueaccord.scalapb.Descriptors

object InternalFields_messages {
  def internalFieldsFor(scalaName: String): Seq[Descriptors.FieldDescriptor] = scalaName match {
    case "netmsg.messages.FromClient" => Seq(Descriptors.FieldDescriptor(0, 1, "game", Descriptors.Optional, Descriptors.MessageType(netmsg.game.FromClient.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "management", Descriptors.Optional, Descriptors.MessageType(netmsg.management.FromClient.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(2, 3, "time_sync", Descriptors.Optional, Descriptors.MessageType(netmsg.messages.TimeSync.FromClient.descriptor), isPacked = false, containingOneofName = None))
    case "netmsg.messages.FromServer" => Seq(Descriptors.FieldDescriptor(0, 1, "game", Descriptors.Optional, Descriptors.MessageType(netmsg.game.FromServer.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "management", Descriptors.Optional, Descriptors.MessageType(netmsg.management.FromServer.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(2, 3, "time_sync", Descriptors.Optional, Descriptors.MessageType(netmsg.messages.TimeSync.FromServer.descriptor), isPacked = false, containingOneofName = None))
    case "netmsg.messages.TimeSync" => Seq()
    case "netmsg.messages.TimeSync.FromClient" => Seq(Descriptors.FieldDescriptor(0, 1, "now", Descriptors.Required, Descriptors.MessageType(netmsg.base.Timestamp.descriptor), isPacked = false, containingOneofName = None))
    case "netmsg.messages.TimeSync.FromServer" => Seq(Descriptors.FieldDescriptor(0, 1, "client_now", Descriptors.Required, Descriptors.MessageType(netmsg.base.Timestamp.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "server_now", Descriptors.Required, Descriptors.MessageType(netmsg.base.Timestamp.descriptor), isPacked = false, containingOneofName = None))
  }
}