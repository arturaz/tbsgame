// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.management

import scala.collection.JavaConversions._
import com.trueaccord.scalapb.Descriptors

final case class Login(
    credentials: netmsg.management.Credentials
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Login] with com.trueaccord.lenses.Updatable[Login] {
    lazy val serializedSize: Int = {
      var __size = 0
      __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(credentials.serializedSize) + credentials.serializedSize
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      output.writeTag(1, 2)
      output.writeRawVarint32(credentials.serializedSize)
      credentials.writeTo(output)
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): netmsg.management.Login = {
      var __credentials = this.credentials
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __credentials = com.trueaccord.scalapb.LiteParser.readMessage(__input, __credentials)
          case tag => __input.skipField(tag)
        }
      }
      netmsg.management.Login(
          credentials = __credentials
      )
    }
    def withCredentials(__v: netmsg.management.Credentials): Login = copy(credentials = __v)
    def getField(__field: Descriptors.FieldDescriptor): Any = {
      __field.number match {
        case 1 => credentials
      }
    }
    override def toString: String = com.google.protobuf.TextFormat.printToString(netmsg.management.Login.toJavaProto(this))
    def companion = netmsg.management.Login
}

object Login extends com.trueaccord.scalapb.GeneratedMessageCompanion[Login] with com.trueaccord.scalapb.JavaProtoSupport[Login, netmsg.Management.Login]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[Login] with com.trueaccord.scalapb.JavaProtoSupport[Login, netmsg.Management.Login]  = this
  def toJavaProto(scalaPbSource: netmsg.management.Login): netmsg.Management.Login = {
    val javaPbOut = netmsg.Management.Login.newBuilder
    javaPbOut.setCredentials(netmsg.management.Credentials.toJavaProto(scalaPbSource.credentials))
    javaPbOut.build
  }
  def fromJavaProto(javaPbSource: netmsg.Management.Login): netmsg.management.Login = netmsg.management.Login(
    credentials = netmsg.management.Credentials.fromJavaProto(javaPbSource.getCredentials)
  )
  override def fromAscii(ascii: String): netmsg.management.Login = {
    val javaProtoBuilder = netmsg.Management.Login.newBuilder
    com.google.protobuf.TextFormat.merge(ascii, javaProtoBuilder)
    fromJavaProto(javaProtoBuilder.build)
  }
  def fromFieldsMap(fieldsMap: Map[Int, Any]): netmsg.management.Login = netmsg.management.Login(
    credentials = fieldsMap(1).asInstanceOf[netmsg.management.Credentials]
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("Login", this,
    None, m = Seq(),
    e = Seq(),
    f = netmsg.management.InternalFields_management.internalFieldsFor("netmsg.management.Login"))
  lazy val defaultInstance = netmsg.management.Login(
    credentials = netmsg.management.Credentials.defaultInstance
  )
  implicit class LoginLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, Login]) extends com.trueaccord.lenses.ObjectLens[UpperPB, Login](_l) {
    def credentials: com.trueaccord.lenses.Lens[UpperPB, netmsg.management.Credentials] = field(_.credentials)((c_, f_) => c_.copy(credentials = f_))
  }
  final val CREDENTIALS_FIELD_NUMBER = 1
}
