// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.management

import scala.collection.JavaConversions._
import com.trueaccord.scalapb.Descriptors

final case class LoginResponse(
    data: Option[netmsg.management.LoginResponse.Data] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[LoginResponse] with com.trueaccord.lenses.Updatable[LoginResponse] {
    lazy val serializedSize: Int = {
      var __size = 0
      if (data.isDefined) { __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(data.get.serializedSize) + data.get.serializedSize }
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      data.foreach { v => 
        output.writeTag(1, 2)
        output.writeRawVarint32(v.serializedSize)
        v.writeTo(output)
      }
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): netmsg.management.LoginResponse = {
      var __data = this.data
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __data = Some(com.trueaccord.scalapb.LiteParser.readMessage(__input, __data.getOrElse(netmsg.management.LoginResponse.Data.defaultInstance)))
          case tag => __input.skipField(tag)
        }
      }
      netmsg.management.LoginResponse(
          data = __data
      )
    }
    def getData: netmsg.management.LoginResponse.Data = data.getOrElse(netmsg.management.LoginResponse.Data.defaultInstance)
    def clearData: LoginResponse = copy(data = None)
    def withData(__v: netmsg.management.LoginResponse.Data): LoginResponse = copy(data = Some(__v))
    def getField(__field: Descriptors.FieldDescriptor): Any = {
      __field.number match {
        case 1 => data
      }
    }
    override def toString: String = com.google.protobuf.TextFormat.printToString(netmsg.management.LoginResponse.toJavaProto(this))
    def companion = netmsg.management.LoginResponse
}

object LoginResponse extends com.trueaccord.scalapb.GeneratedMessageCompanion[LoginResponse] with com.trueaccord.scalapb.JavaProtoSupport[LoginResponse, netmsg.Management.LoginResponse]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[LoginResponse] with com.trueaccord.scalapb.JavaProtoSupport[LoginResponse, netmsg.Management.LoginResponse]  = this
  def toJavaProto(scalaPbSource: netmsg.management.LoginResponse): netmsg.Management.LoginResponse = {
    val javaPbOut = netmsg.Management.LoginResponse.newBuilder
    scalaPbSource.data.map(netmsg.management.LoginResponse.Data.toJavaProto).foreach(javaPbOut.setData)
    javaPbOut.build
  }
  def fromJavaProto(javaPbSource: netmsg.Management.LoginResponse): netmsg.management.LoginResponse = netmsg.management.LoginResponse(
    data = if (javaPbSource.hasData) Some(netmsg.management.LoginResponse.Data.fromJavaProto(javaPbSource.getData)) else None
  )
  override def fromAscii(ascii: String): netmsg.management.LoginResponse = {
    val javaProtoBuilder = netmsg.Management.LoginResponse.newBuilder
    com.google.protobuf.TextFormat.merge(ascii, javaProtoBuilder)
    fromJavaProto(javaProtoBuilder.build)
  }
  def fromFieldsMap(fieldsMap: Map[Int, Any]): netmsg.management.LoginResponse = netmsg.management.LoginResponse(
    data = fieldsMap.getOrElse(1, None).asInstanceOf[Option[netmsg.management.LoginResponse.Data]]
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("LoginResponse", this,
    None, m = Seq(netmsg.management.LoginResponse.Data.descriptor),
    e = Seq(),
    f = netmsg.management.InternalFields_management.internalFieldsFor("netmsg.management.LoginResponse"))
  lazy val defaultInstance = netmsg.management.LoginResponse(
  )
  final case class Data(
      id: netmsg.base.UUID,
      username: String,
      sessionToken: String,
      autogenerated: Boolean
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Data] with com.trueaccord.lenses.Updatable[Data] {
      lazy val serializedSize: Int = {
        var __size = 0
        __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(id.serializedSize) + id.serializedSize
        __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, username)
        __size += com.google.protobuf.CodedOutputStream.computeStringSize(3, sessionToken)
        __size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, autogenerated)
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        output.writeTag(1, 2)
        output.writeRawVarint32(id.serializedSize)
        id.writeTo(output)
        output.writeString(2, username)
        output.writeString(3, sessionToken)
        output.writeBool(4, autogenerated)
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): netmsg.management.LoginResponse.Data = {
        var __id = this.id
        var __username = this.username
        var __sessionToken = this.sessionToken
        var __autogenerated = this.autogenerated
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __id = com.trueaccord.scalapb.LiteParser.readMessage(__input, __id)
            case 18 =>
              __username = __input.readString()
            case 26 =>
              __sessionToken = __input.readString()
            case 32 =>
              __autogenerated = __input.readBool()
            case tag => __input.skipField(tag)
          }
        }
        netmsg.management.LoginResponse.Data(
            id = __id,
            username = __username,
            sessionToken = __sessionToken,
            autogenerated = __autogenerated
        )
      }
      def withId(__v: netmsg.base.UUID): Data = copy(id = __v)
      def withUsername(__v: String): Data = copy(username = __v)
      def withSessionToken(__v: String): Data = copy(sessionToken = __v)
      def withAutogenerated(__v: Boolean): Data = copy(autogenerated = __v)
      def getField(__field: Descriptors.FieldDescriptor): Any = {
        __field.number match {
          case 1 => id
          case 2 => username
          case 3 => sessionToken
          case 4 => autogenerated
        }
      }
      override def toString: String = com.google.protobuf.TextFormat.printToString(netmsg.management.LoginResponse.Data.toJavaProto(this))
      def companion = netmsg.management.LoginResponse.Data
  }
  
  object Data extends com.trueaccord.scalapb.GeneratedMessageCompanion[Data] with com.trueaccord.scalapb.JavaProtoSupport[Data, netmsg.Management.LoginResponse.Data]  {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[Data] with com.trueaccord.scalapb.JavaProtoSupport[Data, netmsg.Management.LoginResponse.Data]  = this
    def toJavaProto(scalaPbSource: netmsg.management.LoginResponse.Data): netmsg.Management.LoginResponse.Data = {
      val javaPbOut = netmsg.Management.LoginResponse.Data.newBuilder
      javaPbOut.setId(netmsg.base.UUID.toJavaProto(scalaPbSource.id))
      javaPbOut.setUsername(scalaPbSource.username)
      javaPbOut.setSessionToken(scalaPbSource.sessionToken)
      javaPbOut.setAutogenerated(scalaPbSource.autogenerated)
      javaPbOut.build
    }
    def fromJavaProto(javaPbSource: netmsg.Management.LoginResponse.Data): netmsg.management.LoginResponse.Data = netmsg.management.LoginResponse.Data(
      id = netmsg.base.UUID.fromJavaProto(javaPbSource.getId),
      username = javaPbSource.getUsername,
      sessionToken = javaPbSource.getSessionToken,
      autogenerated = javaPbSource.getAutogenerated.booleanValue
    )
    override def fromAscii(ascii: String): netmsg.management.LoginResponse.Data = {
      val javaProtoBuilder = netmsg.Management.LoginResponse.Data.newBuilder
      com.google.protobuf.TextFormat.merge(ascii, javaProtoBuilder)
      fromJavaProto(javaProtoBuilder.build)
    }
    def fromFieldsMap(fieldsMap: Map[Int, Any]): netmsg.management.LoginResponse.Data = netmsg.management.LoginResponse.Data(
      id = fieldsMap(1).asInstanceOf[netmsg.base.UUID],
      username = fieldsMap(2).asInstanceOf[String],
      sessionToken = fieldsMap(3).asInstanceOf[String],
      autogenerated = fieldsMap(4).asInstanceOf[Boolean]
    )
    lazy val descriptor = new Descriptors.MessageDescriptor("Data", this,
      None, m = Seq(),
      e = Seq(),
      f = netmsg.management.InternalFields_management.internalFieldsFor("netmsg.management.LoginResponse.Data"))
    lazy val defaultInstance = netmsg.management.LoginResponse.Data(
      id = netmsg.base.UUID.defaultInstance,
      username = "",
      sessionToken = "",
      autogenerated = false
    )
    implicit class DataLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, Data]) extends com.trueaccord.lenses.ObjectLens[UpperPB, Data](_l) {
      def id: com.trueaccord.lenses.Lens[UpperPB, netmsg.base.UUID] = field(_.id)((c_, f_) => c_.copy(id = f_))
      def username: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.username)((c_, f_) => c_.copy(username = f_))
      def sessionToken: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.sessionToken)((c_, f_) => c_.copy(sessionToken = f_))
      def autogenerated: com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.autogenerated)((c_, f_) => c_.copy(autogenerated = f_))
    }
    final val ID_FIELD_NUMBER = 1
    final val USERNAME_FIELD_NUMBER = 2
    final val SESSION_TOKEN_FIELD_NUMBER = 3
    final val AUTOGENERATED_FIELD_NUMBER = 4
  }
  
  implicit class LoginResponseLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, LoginResponse]) extends com.trueaccord.lenses.ObjectLens[UpperPB, LoginResponse](_l) {
    def data: com.trueaccord.lenses.Lens[UpperPB, netmsg.management.LoginResponse.Data] = field(_.getData)((c_, f_) => c_.copy(data = Some(f_)))
    def optionalData: com.trueaccord.lenses.Lens[UpperPB, Option[netmsg.management.LoginResponse.Data]] = field(_.data)((c_, f_) => c_.copy(data = f_))
  }
  final val DATA_FIELD_NUMBER = 1
}
