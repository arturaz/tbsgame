// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.management


import com.trueaccord.scalapb.Descriptors

final case class WaitingListJoined(
    backgroundToken: String
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[WaitingListJoined] with com.trueaccord.lenses.Updatable[WaitingListJoined] {
    lazy val serializedSize: Int = {
      var __size = 0
      __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, backgroundToken)
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      output.writeString(1, backgroundToken)
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): netmsg.management.WaitingListJoined = {
      var __backgroundToken = this.backgroundToken
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __backgroundToken = __input.readString()
          case tag => __input.skipField(tag)
        }
      }
      netmsg.management.WaitingListJoined(
          backgroundToken = __backgroundToken
      )
    }
    def withBackgroundToken(__v: String): WaitingListJoined = copy(backgroundToken = __v)
    def getField(__field: Descriptors.FieldDescriptor): Any = {
      __field.number match {
        case 1 => backgroundToken
      }
    }
    def companion = netmsg.management.WaitingListJoined
}

object WaitingListJoined extends com.trueaccord.scalapb.GeneratedMessageCompanion[WaitingListJoined]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[WaitingListJoined]  = this
  def fromFieldsMap(fieldsMap: Map[Int, Any]): netmsg.management.WaitingListJoined = netmsg.management.WaitingListJoined(
    backgroundToken = fieldsMap(1).asInstanceOf[String]
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("WaitingListJoined", this,
    None, m = Seq(),
    e = Seq(),
    f = netmsg.management.InternalFields_management.internalFieldsFor("netmsg.management.WaitingListJoined"))
  lazy val defaultInstance = netmsg.management.WaitingListJoined(
    backgroundToken = ""
  )
  implicit class WaitingListJoinedLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, WaitingListJoined]) extends com.trueaccord.lenses.ObjectLens[UpperPB, WaitingListJoined](_l) {
    def backgroundToken: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.backgroundToken)((c_, f_) => c_.copy(backgroundToken = f_))
  }
  final val BACKGROUND_TOKEN_FIELD_NUMBER = 1
}
