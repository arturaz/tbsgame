// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package netmsg.management

import scala.collection.JavaConversions._
import com.trueaccord.scalapb.Descriptors

final case class GameJoined(
    player: netmsg.game.Player
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[GameJoined] with com.trueaccord.lenses.Updatable[GameJoined] {
    lazy val serializedSize: Int = {
      var __size = 0
      __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(player.serializedSize) + player.serializedSize
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      output.writeTag(1, 2)
      output.writeRawVarint32(player.serializedSize)
      player.writeTo(output)
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): netmsg.management.GameJoined = {
      var __player = this.player
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __player = com.trueaccord.scalapb.LiteParser.readMessage(__input, __player)
          case tag => __input.skipField(tag)
        }
      }
      netmsg.management.GameJoined(
          player = __player
      )
    }
    def withPlayer(__v: netmsg.game.Player): GameJoined = copy(player = __v)
    def getField(__field: Descriptors.FieldDescriptor): Any = {
      __field.number match {
        case 1 => player
      }
    }
    override def toString: String = com.google.protobuf.TextFormat.printToString(netmsg.management.GameJoined.toJavaProto(this))
    def companion = netmsg.management.GameJoined
}

object GameJoined extends com.trueaccord.scalapb.GeneratedMessageCompanion[GameJoined] with com.trueaccord.scalapb.JavaProtoSupport[GameJoined, netmsg.Management.GameJoined]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[GameJoined] with com.trueaccord.scalapb.JavaProtoSupport[GameJoined, netmsg.Management.GameJoined]  = this
  def toJavaProto(scalaPbSource: netmsg.management.GameJoined): netmsg.Management.GameJoined = {
    val javaPbOut = netmsg.Management.GameJoined.newBuilder
    javaPbOut.setPlayer(netmsg.game.Player.toJavaProto(scalaPbSource.player))
    javaPbOut.build
  }
  def fromJavaProto(javaPbSource: netmsg.Management.GameJoined): netmsg.management.GameJoined = netmsg.management.GameJoined(
    player = netmsg.game.Player.fromJavaProto(javaPbSource.getPlayer)
  )
  override def fromAscii(ascii: String): netmsg.management.GameJoined = {
    val javaProtoBuilder = netmsg.Management.GameJoined.newBuilder
    com.google.protobuf.TextFormat.merge(ascii, javaProtoBuilder)
    fromJavaProto(javaProtoBuilder.build)
  }
  def fromFieldsMap(fieldsMap: Map[Int, Any]): netmsg.management.GameJoined = netmsg.management.GameJoined(
    player = fieldsMap(1).asInstanceOf[netmsg.game.Player]
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("GameJoined", this,
    None, m = Seq(),
    e = Seq(),
    f = netmsg.management.InternalFields_management.internalFieldsFor("netmsg.management.GameJoined"))
  lazy val defaultInstance = netmsg.management.GameJoined(
    player = netmsg.game.Player.defaultInstance
  )
  implicit class GameJoinedLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, GameJoined]) extends com.trueaccord.lenses.ObjectLens[UpperPB, GameJoined](_l) {
    def player: com.trueaccord.lenses.Lens[UpperPB, netmsg.game.Player] = field(_.player)((c_, f_) => c_.copy(player = f_))
  }
  final val PLAYER_FIELD_NUMBER = 1
}
